on:
  push:
    branches:
    - master

name: shiny-deploy

jobs:
  shiny-deploy:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-18.04, r: '4.0.2', rspm: "https://packagemanager.rstudio.com/cran/__linux__/bionic/latest"}
    env:
      SHINYAPPS_NAME:   ${{ secrets.SHINYAPPS_NAME }}
      SHINYAPPS_TOKEN:  ${{ secrets.SHINYAPPS_TOKEN }}
      SHINYAPPS_SECRET: ${{ secrets.SHINYAPPS_SECRET }}
    steps:
      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - name: Query dependencies
        run: |
          install.packages("remotes")
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'cat(remotes::system_requirements("ubuntu", "20.04"), sep = "\n")')

      - name: Cache R packages
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-2-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-2-

      - name: Install dependencies
        run: |
          options(repos = c(CRAN = "https://packagemanager.rstudio.com/all/__linux__/bionic/latest"))
          install.packages(c("remotes", "rsconnect"))
          remotes::install_deps(dependencies = TRUE)

        shell: Rscript {0}

      - name: Deploy
        run: |
          library(rsconnect)
          setAccountInfo(name = Sys.getenv("SHINYAPPS_NAME"),
                         token = Sys.getenv("SHINYAPPS_TOKEN"),
                         secret = Sys.getenv("SHINYAPPS_SECRET"))
          deployApp(account = "strategyunit",
                    appName = "MH_Surge_Modelling",
                    forceUpdate = TRUE)
        shell: Rscript {0}
